# The contents of this file are subject to the terms of the Common Development and
# Distribution License (the License). You may not use this file except in compliance with the
# License.
#
# You can obtain a copy of the License at legal/CDDLv1.0.txt. See the License for the
# specific language governing permission and limitations under the License.
#
# When distributing Covered Software, include this CDDL Header Notice in each file and include
# the License file at legal/CDDLv1.0.txt. If applicable, add the following below the CDDL
# Header, with the fields enclosed by brackets [] replaced by your own identifying
# information: "Portions copyright [year] [name of copyright owner]".
#
# Copyright 2016 ForgeRock AS.

#######################################################################################################################
# Policy Resource endpoint
#######################################################################################################################

title=Policies
description=The Policy resource endpoint is responsible for managing policies. The available operations are create, \
  read, update, delete, query, evalute action, evaluate tree action. Policies are realm specific, hence the URI for \
  the policies API can contain a realm component. If the realm is not specified in the URI, the top level realm is used.
pathparam.description=The unique identifier of the policy
delete.description=Delete policy
update.description=Update an existing policy
read.description=Read policy
create.description=Create new policy
query.description=Query the stored policies
evaluate.action.description=Request policy decisions for specific resources
evaluatetree.action.description=Request policy decisions for a tree of resources

error.400.description=Bad request error. The cause can be the following:\n\
    * Missing privilidge name\n\
    * Invalid json provided in the request\n\
    * Invalid value found in json\n\
    * Invalid policy name provided in json\n\
    * Resource name and JSON body name do not match\n\
    * Query id missing UID\n\
    * Invalid query id\n\
    * Invalid search filter\n\
    * Empty privilidge name\n\
    * Entitlement value was NULL\n\
    * No resource type was expected\n\
    * Policy defines invalid resource type\n\
    * The provided resourceId does not match to the UUID in the json file

error.403.description=Permission Denied to access or create policy

error.404.description=Not Found error. The cause can be the following:\n\
    * The Policy cannot be found\n\
    * The required resource type cannot be found

error.405.description=The requested action is not supported on policies

error.500.description=Unexpected server error happened during the process

error.501.description=Unsupported operation


schema.title=Policy Resource Schema
schema.description=Json schema for the policy resource
schema.name.title=Name
schema.name.description=String matching the name of the application
schema.active.title=Active flag
schema.active.description=Boolean indicating whether OpenAM considers the policy active for evaluation purposes, \
  defaults to false
schema.description.title=Description
schema.description.description=String describing the policy
schema.applicationName.title=Application name
schema.applicationName.description=String containing the application name, such as "iPlanetAMWebAgentService", or \
  "mypolicyset"
schema.actionValues.title=Action values
schema.actionValues.description=Set of string action names, each set to a boolean indicating whether the action is \
  allowed. Chosen from the available actions provided by the associated Managing Resource Types resource type
schema.resources.title=Resources
schema.resources.description=List of the resource name pattern strings to which the policy applies. Must conform to \
  the pattern templates provided by the associated Managing Resource Types resource type
schema.subject.title=Subject
schema.subject.description=Specifies the subject conditions to which the policy applies, where subjects can \
  be combined by using the built-in types "AND", "OR", and "NOT", and where subject implementations are pluggable
schema.condition.title=Condition
schema.condition.description=Specifies environment conditions, where conditions can be combined by using the built-in \
   types "AND", "OR", and "NOT", and where condition implementations are pluggable
schema.resourceTypeUuid.title=Resource Type UUID
schema.resourceTypeUuid.description=The UUIDs of the resource type associated with the policy
schema.resourceAttributes.title=Resource Attributes
schema.resourceAttributes.description=List of attributes to return with decisions. These attributes are known as \
  response attributes
schema.lastModifiedBy.title=Last Modified By
schema.lastModifiedBy.description=A string containing the universal identifier DN of the subject that most recently \
  updated the policy
schema.lastModifiedDate.title=Last Modified date
schema.lastModifiedDate.description=An integer containing the last modified date and time, in number of seconds
schema.createdBy.title=Created By
schema.createdBy.description=A string containing the universal identifier DN of the subject that created the policy
schema.creationDate.title=Creation Date
schema.creationDate.description=An integer containing the creation date and time, in number of seconds

evaluate.request.schema.title=Evaluate action schema
evaluate.request.schema.description=Evaluate action schema
evaluate.request.schema.resources.title=Resources
evaluate.request.schema.resources.description=Specifies the list of resources for which to return decisions
evaluate.request.schema.application.title=Application
evaluate.request.schema.application.description=Holds the name of the application, and defaults to \
  "iPlanetAMWebAgentService" if not specified
evaluate.request.schema.subject.title=Subject
evaluate.request.schema.subject.description=Holds an object that represents the subject. You can specify one or more \
  of the following keys. If you specify multiple keys, the subject can have multiple associated principals, and you \
  can use subject conditions corresponding to any type in the request
evaluate.request.schema.ssoToken.title=SSOToken
evaluate.request.schema.ssoToken.description=The value is the SSO token ID string for the subject
evaluate.request.schema.jwt.title=JWT
evaluate.request.schema.jwt.description=The value is a JWT string
evaluate.request.schema.claims.title=Claims
evaluate.request.schema.claims.description=The value is an object (map) of JWT claims to their values.
evaluate.request.schema.environment.title=Environment
evaluate.request.schema.environment.description=Holds a map of keys to lists of values

evaluatetree.request.schema.title=Evaluate tree action schema
evaluatetree.request.schema.description=Evaluate tree action schema
evaluatetree.request.schema.resource.title=Resource
evaluatetree.request.schema.resource.description=Specifies the root resource for the decisions to return

action.response.schema.title=Evaluate and evaluateTree schema response
action.response.schema.description=Evaluate and evaluateTree schema response
action.response.schema.resource.title=Resource
action.response.schema.resource.description=Specifies the root resource for the decisions to return
action.response.schema.actions.title=Actions
action.response.schema.actions.description=A map of action name keys to Boolean values that indicate whether the \
  action is allowed (true) or denied (false) for the specified resource
action.response.schema.attributes.title=Attributes
action.response.schema.attributes.description=A map of attribute names to their values, if any response attributes \
  are returned according to applicable policies
action.response.schema.advices.title=Advices
action.response.schema.advices.description=A map of advice names to their values, if any advice is returned according \
   to applicable policies
